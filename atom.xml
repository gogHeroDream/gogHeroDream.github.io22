<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SP Blog</title>
  <icon>https://www.gravatar.com/avatar/28587295d610488886c736989d92a9d1</icon>
  <subtitle>blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-12T11:29:05.440Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>宋鹏</name>
    <email>songpengzq@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/07/20/markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/07/20/markdown语法/</id>
    <published>2018-07-20T09:55:44.027Z</published>
    <updated>2017-12-12T11:29:05.440Z</updated>
    
    <content type="html"><![CDATA[<p>参考网址：<a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">http://wowubuntu.com/markdown/</a><br>1、标题<br>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。<br>①atx 形式 #与文字中间要有空格</p><h1 id="一级标题-二级标题-三级标题-四级标题-五级标题-六级标题"><a href="#一级标题-二级标题-三级标题-四级标题-五级标题-六级标题" class="headerlink" title="一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题"></a>一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题</h1><p>②Setext 形式 用底线的形式，任何数量的 = 和 - 都可以有效果。<br>2、图片<br>！<a href="图片链接地址">提示的文字</a><br>3、链接（两种）<br>①内联：  <a href="链接地址">显示的文字</a>；<br>②引用方式：</p><p>4、换行<br>两个以上的空格然后回车<br>5、代码引用<br>如果引用的语句只有一段，不分行，可以用 <code>将语句包起来。如</code>code<code>;如果引用的语句为多行，可以将``</code>置于这段代码的首行和末行。或者四个空格或一个制表符<br>6、列表</p><p>7、引用</p><blockquote><p>和文本之间要保留一个字符的空格。<br>8、分割线<br>可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。<br>9、字体属性<br>通过闭合标签font，属性face为字体类型，color为字体颜色，size为字体大小</p></blockquote><font face="STCAIYUN">我是华文彩云</font><br><font color="gray" size="5">color=gray</font><br><font color="#0099ff" size="5" face="黑体">color=#0099ff size=5 face=”黑体”</font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考网址：&lt;a href=&quot;http://wowubuntu.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://wowubuntu.com/markdown/&lt;/a&gt;&lt;br&gt;1、标题&lt;br&gt;Markdown 支持两种标
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/07/20/hello-world/"/>
    <id>http://yoursite.com/2018/07/20/hello-world/</id>
    <published>2018-07-20T08:20:25.367Z</published>
    <updated>2018-07-20T08:20:25.367Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS距离相关的属性</title>
    <link href="http://yoursite.com/2018/04/03/180403js%E8%B7%9D%E7%A6%BB%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2018/04/03/180403js距离相关/</id>
    <published>2018-04-03T09:03:38.000Z</published>
    <updated>2018-04-03T11:08:40.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="理解不够，先上张图来凑"><a href="#理解不够，先上张图来凑" class="headerlink" title="理解不够，先上张图来凑"></a>理解不够，先上张图来凑</h2><p>js中获取各种宽度和距离，常常让我们混淆，各种浏览器的不兼容让我们很头疼，现在就在说说js中有哪些宽度和距离。<br><img src="/assets/blog/blog180403/img1_180403.jpg" alt="属性图解"></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><blockquote><p>screen：屏幕。这一类取到的是关于屏幕的宽度和距离，与浏览器无关，应该是获取window对象的属性。<br>client：使用区、客户区。指的是客户区，当然是指浏览器区域。<br>offset：偏移。指的是目标甲相对目标乙的距离。<br>scroll：卷轴、卷动。指的是包含滚动条的的属性。<br>inner：内部。指的是内部部分，不含滚动条。<br>avail：可用的。可用区域，不含滚动条，易与inner混淆。</p></blockquote><h2 id="window"><a href="#window" class="headerlink" title="window"></a>window</h2><h3 id="1-window-innerWidth-innerHeight"><a href="#1-window-innerWidth-innerHeight" class="headerlink" title="1.window.innerWidth/innerHeight"></a>1.window.innerWidth/innerHeight</h3><p>描述：浏览器可见区域的内宽度、高度（不含浏览器的边框，但包含滚动条）。<br>兼容：ie9/10、chrome、firefox。<br>示例（缩放浏览器的宽度为1000px，高度为500px）：</p><blockquote><p>alert(window.innerWidth);<br>// chrome/firefox/ie9/10=&gt;1000<br>// ie6/7/8=&gt;undefined<br>alert(window.innerHeight);<br>// chrome/firefox/ie9/10=&gt;500<br>// ie6/7/8=&gt;undefined</p></blockquote><h3 id="2-window-outerWidth-outerHeight"><a href="#2-window-outerWidth-outerHeight" class="headerlink" title="2.window.outerWidth/outerHeight"></a>2.window.outerWidth/outerHeight</h3><p>描述：浏览器外宽度（包含浏览器的边框，因各个浏览器的边框边一样，得到的值也是不一样的）。<br>兼容：ie9/10、chrome、firefox。<br>示例（缩放浏览器的宽度为1000px，高度为500px）：</p><blockquote><p>alert(window.outerWidth);<br>// chrome/firefox/ie9/10=&gt;1002<br>// ie6/7/8=&gt;undefined<br>alert(window.outerHeight);<br>// chrome/firefox/ie9/10=&gt;502<br>// ie6/7/8=&gt;undefined</p></blockquote><p>注意：没有window.width属性。</p><h3 id="3-window-screenLeft-screenTop"><a href="#3-window-screenLeft-screenTop" class="headerlink" title="3.window.screenLeft/screenTop"></a>3.window.screenLeft/screenTop</h3><p>描述：浏览器的位移，表示：<br>ie浏览器的内边缘距离屏幕边缘的距离。<br>chrome浏览器的外边缘距离屏幕边缘的距离。<br>如图：<br><img src="/assets/blog/blog180403/img2_180403.jpg" alt="属性图解2"><br>兼容：ie6/7/8/9/10、chrome。<br>示例：</p><blockquote><p>alert(window.screenLeft);<br>// ie=&gt;87<br>// chrome=&gt;86<br>// firefox=&gt;undefined<br>alert(window.screenTop);<br>// ie=&gt;87<br>// chrome=&gt;86<br>// firefox=&gt;undefined</p></blockquote><h3 id="4-window-screenX-screenY"><a href="#4-window-screenX-screenY" class="headerlink" title="4.window.screenX/screenY"></a>4.window.screenX/screenY</h3><p>描述：浏览器的位移，表示：<br>ie9/10浏览器的外边缘距离屏幕边缘的距离。<br>chrome浏览器的外边缘距离屏幕边缘的距离。<br>由此可知，chrome的screenLeft和screenX是相等的（其目的是为了兼容ie和firefox，两个属性都兼备了，但更趋向于firefox，chrome的这种做法不止这一处，还有很多，其实这种做法便于开发者移植，但对开发者的开发过程产生了一定的混淆），ie9/10的screenLeft是大于screenX的.<br>兼容：ie9/10、chrome、firefox。<br>示例：</p><blockquote><p>alert(window.screenX);<br>// chrome/firefox=&gt;86<br>// ie9/10=&gt;79<br>// ie6/7/8=&gt;undefined</p><p>alert(window.screenY);<br>// chrome/firefox=&gt;86<br>// ie9/10=&gt;79<br>// ie6/7/8=&gt;undefined</p></blockquote><h3 id="5-window-pageXOffset-pageYOffset"><a href="#5-window-pageXOffset-pageYOffset" class="headerlink" title="5.window.pageXOffset/pageYOffset"></a>5.window.pageXOffset/pageYOffset</h3><p>描述：表示浏览器X轴（水平）、Y轴（垂直）滚动条的偏移距离。<br>兼容：ie9/10、chrome、firefox。<br>示例：</p><blockquote><p>document.onclick=function(){<br>   alert(window.pageXOffset);<br>   // chrome=&gt;200<br>   // firefox=&gt;200<br>   // ie9/10=&gt;200<br>   // ie6/7/8=&gt;undefined<br>   alert(window.pageYOffset);<br>   // chrome=&gt;200<br>   // firefox=&gt;200<br>   // ie9/10=&gt;200<br>   // ie6/7/8=&gt;undefined<br>};</p></blockquote><h3 id="6-window-scrollX-scrollY"><a href="#6-window-scrollX-scrollY" class="headerlink" title="6.window.scrollX/scrollY"></a>6.window.scrollX/scrollY</h3><p>描述：表示浏览器X轴（水平）、Y轴（垂直）滚动条的偏移距离。由此可知，在chrome和firefox中window.pageXOffset和window.scrollX是相等的，具体为什么会出现两个相等的属性值，不得而知。<br>兼容：chrome、firefox。<br>示例：</p><blockquote><p>document.onclick=function(){<br>   alert(window.scrollX);<br>   // chrome=&gt;200<br>   // firefox=&gt;200<br>   // ie6/7/8/9/10=&gt;undefined</p><p>   alert(window.scrollY);<br>   // chrome=&gt;200<br>   // firefox=&gt;200<br>   // ie6/7/8/9/10=&gt;undefined<br>};</p></blockquote><h2 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h2><h3 id="1-screen-width-height"><a href="#1-screen-width-height" class="headerlink" title="1.screen.width/height"></a>1.screen.width/height</h3><p>描述：屏幕的宽度、高度（指的是屏幕的分辨率，单位为像素）。<br>兼容性：ie6/7/8/9/10、chrome、firefox。<br>示例（屏幕的分辨率为1440×900）：</p><blockquote><p>alert(screen.width);<br>// chrome/firefox/ie6/7/8/9/10=&gt;1440<br>alert(screen.height);<br>// chrome/firefox/ie6/7/8/9/10=&gt;900</p></blockquote><p>注意：此处必须是screen.width，而不是screenWidth，与接下来要说的各种宽度有所区别。</p><h3 id="2-screen-availWidth-availHeight"><a href="#2-screen-availWidth-availHeight" class="headerlink" title="2.screen.availWidth/availHeight"></a>2.screen.availWidth/availHeight</h3><p>描述：屏幕的可用宽度、高度（通常与屏幕的宽度、高度一致）。<br>兼容性：ie6/7/8/9/10、chrome、firefox。<br>示例：</p><blockquote><p>alert(screen.availWidth);<br>// chrome/firefox/ie6/7/8/9/10=&gt;1440<br>alert(screen.availHeight);<br>// chrome/firefox/ie6/7/8/9/10=&gt;900</p></blockquote><h2 id="element"><a href="#element" class="headerlink" title="element"></a>element</h2><p>元素的宽度、位移、距离以元素的盒模型为content-box为例。即：</p><blockquote><p>box-sizing: content-box;<br>其他盒模型计算会有差异，请勿对号入座。</p></blockquote><h3 id="1-elment-clientWidth-clientHeight"><a href="#1-elment-clientWidth-clientHeight" class="headerlink" title="1.elment.clientWidth/clientHeight"></a>1.elment.clientWidth/clientHeight</h3><p>描述：计算如下，</p><blockquote><p>有滚动条时：clientWidth=元素左内边距宽度+元素宽度+元素右内边距宽度-元素垂直滚动条宽度<br>无滚动条时：clientWidth=元素左内边距宽度+元素宽度+元素右内边距宽度</p></blockquote><p>使用该特性可以计算出的滚动条宽度（即设置元素的内容宽度超过元素宽度，然后分别设置是否超过隐藏，两次的clientWidth差值就是滚动条的宽度）。<br>兼容：chrome、firefox、ie6/7/8/9/10。<br>示例（宽度和高度都为100px，边框为50px，内边距为60px，外边距为70px，左、上位移为80px，滚动条的宽度因系统不同而不同）：<br><img src="/assets/blog/blog180403/img3_180403.jpg" alt="属性图解3"></p><blockquote><p>// 有滚动条=&gt;paddingLeftWidth+width+paddingRightWidth-scrollYWidth<br>// 无滚动条=&gt;paddingLeftWidth+width+paddingRightWidth<br>alert(oDemo.clientWidth);<br>// 有滚动条=&gt;60+100+60-17=203<br>// 无滚动条=&gt;60+100+60=220<br>// 有滚动条=&gt;paddingTopWidth+height+paddingBottomWidth-scrollYHeight<br>// 无滚动条=&gt;paddingTopWidth+height+paddingBottomWidth<br>alert(oDemo.clientHeight);<br>// 有滚动条=&gt;60+100+60-17=203<br>// 无滚动条=&gt;60+100+60=220</p></blockquote><h3 id="2-element-clientLeft-clientTop"><a href="#2-element-clientLeft-clientTop" class="headerlink" title="2.element.clientLeft/clientTop"></a>2.element.clientLeft/clientTop</h3><p>描述：clientLeft为左边框宽度，clientTop为上边框宽度。<br>兼容：chrome、firefox、ie6/7/8/9/10。<br>示例（宽度和高度都为100px，边框为50px，内边距为60px，外边距为70px，左、上位移为80px，滚动条的宽度因系统不同而不同）：<br><img src="/assets/blog/blog180403/img4_180403.jpg" alt="属性图解4"></p><blockquote><p>// borderLeftWidth<br>alert(oDemo.clientLeft);<br>// =&gt;50</p><p>// borderTopWidth<br>alert(oDemo.clientTop);<br>// =&gt;50</p></blockquote><h3 id="3-element-offsetWidth-offsetHeight"><a href="#3-element-offsetWidth-offsetHeight" class="headerlink" title="3.element.offsetWidth/offsetHeight"></a>3.element.offsetWidth/offsetHeight</h3><p>描述：offsetWidth=元素左边框宽度+元素左内边距宽度+元素宽度+元素右内边距宽度+元素右边框宽度。<br>兼容：chrome、firefox、ie6/7/8/9/10。<br>示例（宽度和高度都为100px，边框为50px，内边距为60px，外边距为70px，左、上位移为80px，滚动条的宽度因系统不同而不同）：</p><blockquote><p>// borderLeftWidth+paddingLeftWidth+width+paddingRightWidth+borderRightWidth<br>alert(oDemo.offsetWidth);<br>// =&gt;50+60+100+60+50=320</p><p>// borderTopWidth+paddingLeftWidth+width+paddingRightWidth+borderRightWidth<br>alert(oDemo.offsetWidth);<br>// =&gt;50+60+100+60+50=320</p></blockquote><h3 id="4-element-offsetLeft-offsetTop"><a href="#4-element-offsetLeft-offsetTop" class="headerlink" title="4.element.offsetLeft/offsetTop"></a>4.element.offsetLeft/offsetTop</h3><p>描述：表示该元素相对于最近的定位祖先元素的距离，<br>chrome：offsetLeft=定位祖先左边框宽度+定位祖先元素左内边距宽度+左位移+左外边距宽度<br>ie6/7/8/9/10、firefox：offsetLeft=定位祖先元素左内边距宽度+左位移+左外边距宽度。<br>chrome比其他浏览器多计算了定位祖先元素的边框。offsetTop同理。<br>兼容：chrome、firefox、ie6/7/8/9/10。<br>示例（宽度和高度都为100px，边框为50px，内边距为60px，外边距为70px，左、上位移为80px，滚动条的宽度因系统不同而不同）：</p><blockquote><p>// 以最近的定位祖先元素为准<br>// 谷歌=&gt;parentBorderLeftWidth+parentPaddingLeftWidth+left+marginLeft<br>// 其他=&gt;parentPaddingLeftWidth+left+marginLeft<br>alert(oDemo.offsetLeft);<br>// chrome=&gt;20+10+80+70=180<br>// ie6/7/8/9/10/firefox=&gt;160</p><p>// 以最近的定位祖先元素为准<br>// 谷歌=&gt;parentBorderTopWidth+parentPaddingTopWidth+left+marginLeft<br>// 其他=&gt;parentBorderTopWidth+left+marginLeft<br>alert(oDemo.offsetLeft);<br>// chrome=&gt;20+10+80+70=180<br>// ie6/7/8/9/10/firefox=&gt;160</p></blockquote><h3 id="5-element-scrollWidth-scrollHeight"><a href="#5-element-scrollWidth-scrollHeight" class="headerlink" title="5.element.scrollWidth/scrollHeight"></a>5.element.scrollWidth/scrollHeight</h3><p>描述：计算方法如，<br>有滚动条时：</p><blockquote><p>chrome、firefox、ie8/9/10：左内边距宽度+内容宽度。<br>ie6/7：左内边距宽度+内容宽度+右内边距宽度（是由CSS的BUG引起）。<br>无滚动条时：左内边距宽度+宽度+右内边距宽度。</p></blockquote><p>兼容：chrome、firefox、ie8/9/10、ie6/7（半兼容）。<br>示例（宽度和高度都为100px，边框为50px，内边距为60px，外边距为70px，左、上位移为80px，滚动条的宽度因系统不同而不同，内容宽度和高度都为200px）：</p><blockquote><p>// 有滚动条=paddingLeftWidth+contentWidth<br>// 有滚动条(ie6/7)=paddingLeftWidth+contentWidth+paddingRightWidth<br>// 无滚动条=paddingLeftWidth+width+paddingRightWidth<br>alert(oDemo.scrollWidth);<br>// 有滚动条=&gt;200+60=260<br>// 有滚动条(ie6/7)=&gt;200+60+60=320<br>// 无滚动条=&gt;100+60+60=220</p><p>// 有滚动条=paddingTopWidth+contentWidth<br>// 有滚动条(ie6/7)=paddingTopWidth+contentWidth+paddingBottomWidth<br>// 无滚动条=paddingTopWidth+width+paddingBottomWidth<br>alert(oDemo.scrollHeight);<br>// 有滚动条=&gt;60+200=260<br>// 有滚动条(ie6/7)=&gt;60+200+60=320<br>// 无滚动条=&gt;60+100+60=220</p></blockquote><h3 id="6-element-scrollLeft-scrollTop"><a href="#6-element-scrollLeft-scrollTop" class="headerlink" title="6.element.scrollLeft/scrollTop"></a>6.element.scrollLeft/scrollTop</h3><p>描述：获得水平、垂直滚动条的距离。<br>兼容：chrome、firefox、ie6/7/8/9/10。<br>示例（宽度和高度都为100px，边框为50px，内边距为60px，外边距为70px，左、上位移为80px，滚动条的宽度因系统不同而不同）：</p><blockquote><p>document.onclick=function(){<br>   // 水平滚动条左距离<br>   alert(oDemo.scrollLeft);</p><p>   // 垂直滚动条上距离<br>   alert(oDemo.scrollTop);<br>}</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因为document.documentElement就是浏览器的html标签，所以获取浏览器的相关属性，也可以用该对象来获取。<br>屏幕宽度：window.screen.width。<br>浏览器内宽度：window.innerWidth || document.documentElement.clientWidth。<br>元素内容宽度：element.clientWidth。<br>元素占位宽度：element.offsetWidth。<br>元素相对位置：无。<br>原文来自:<a href="http://caibaojian.com/js-name.html" target="_blank" rel="noopener">http://caibaojian.com/js-name.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;理解不够，先上张图来凑&quot;&gt;&lt;a href=&quot;#理解不够，先上张图来凑&quot; class=&quot;headerlink&quot; title=&quot;理解不够，先上张图来凑&quot;&gt;&lt;/a&gt;理解不够，先上张图来凑&lt;/h2&gt;&lt;p&gt;js中获取各种宽度和距离，常常让我们混淆，各种浏览器的不兼容让我们很
      
    
    </summary>
    
    
      <category term="JS基础语法" scheme="http://yoursite.com/tags/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="http://yoursite.com/2018/03/25/180325markdown/"/>
    <id>http://yoursite.com/2018/03/25/180325markdown/</id>
    <published>2018-03-24T17:31:38.000Z</published>
    <updated>2018-03-24T18:01:51.320Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>Markdown 的目标是实现「易读易写.<a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">参考地址转自</a></p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h2 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h2><p>Markdown 语法的目标是：成为一种适用于网络的书写语言。</p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div></code>、<code>&lt;table></code>、<code>&lt;pre></code>、<code>&lt;p></code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p></code> 标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;Markdown 的目标是实现「易读易写.&lt;a href=&quot;http://wowubuntu.com/markdown/&quot; 
      
    
    </summary>
    
    
      <category term="语法" scheme="http://yoursite.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>建站日志</title>
    <link href="http://yoursite.com/2018/03/24/180324%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/"/>
    <id>http://yoursite.com/2018/03/24/180324建站日志/</id>
    <published>2018-03-24T09:31:38.000Z</published>
    <updated>2018-07-21T07:36:56.676Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本站于2018年3月20日创建，故在此mark，站点是本人用来及记录一些开发技巧与自我提升的一个记录依据，写的不好的地方希望各位路过的大神来补充一下。在此感谢！！！</p><h2 id="建站目的"><a href="#建站目的" class="headerlink" title="建站目的"></a>建站目的</h2><p>本站是利用<a href="https://hexo.io/" target="_blank" rel="noopener">hexo</a>+<a href="https://github.com/" target="_blank" rel="noopener">github</a>来搭建的个人博客站，从零开始建站，自身学会了一些技巧，对于自身来说是一件很有意义的事，在这里就分享下我的建站心得吧。</p><h2 id="建站方式"><a href="#建站方式" class="headerlink" title="建站方式"></a>建站方式</h2><ul><li><p>首先你要是想拥有自己的站点有三种方式，如果只是写写博客推荐第3条而且免费，</p><blockquote><p>1.申请域名、服务器（这个是真正属于自己的站点，想丢啥丢啥，不过别违法哦）；<br>2.挂载到公司测试服务器上，（极度不推荐，可维护性差，代码说没就没了）；<br>3.挂载到<a href="https://github.com/" target="_blank" rel="noopener">github</a>上（极其推荐，免费、实用）。</p></blockquote></li><li><p>使用第三种方式，快速建站又分为两种方式本站是第一种</p><blockquote><p>1.<a href="https://hexo.io/" target="_blank" rel="noopener">hexo</a>+<a href="https://github.com/" target="_blank" rel="noopener">github</a>;<br>2.<a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>+<a href="https://github.com/" target="_blank" rel="noopener">github</a>;</p></blockquote></li></ul><h2 id="建站历程"><a href="#建站历程" class="headerlink" title="建站历程"></a>建站历程</h2><h3 id="1-先申请账号"><a href="#1-先申请账号" class="headerlink" title="1.先申请账号"></a>1.先申请账号</h3><p>要拥有自己的站点得先拥有自己的代码仓库，不然没有代码存放的地方怎么能拿出来看呢？账号可以去官网申请<a href="https://github.com/" target="_blank" rel="noopener">github官网</a><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/assets/blog/blog180320/github_step1.png" alt="github_step1" title="">                </div>                <div class="image-caption">github_step1</div>            </figure><br>按顺序都填完，邮箱认证完，点击右上角的新建一个仓库，新建一个仓库已自己仓库名.github.io来为这个仓库命名<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/assets/blog/blog180320/github_step3.png" alt="github_step1" title="">                </div>                <div class="image-caption">github_step1</div>            </figure></p><h3 id="2-安装node"><a href="#2-安装node" class="headerlink" title="2.安装node"></a>2.安装node</h3><p>环境依赖，去<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">node官网</a>下载稳定版;<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/assets/blog/blog180320/node_step.png" alt="github_step1" title="">                </div>                <div class="image-caption">github_step1</div>            </figure></p><h3 id="3-安装hexo和hexocli"><a href="#3-安装hexo和hexocli" class="headerlink" title="3.安装hexo和hexocli"></a>3.安装hexo和hexocli</h3><p>打开命令行输入 </p><blockquote><p>npm i hexo -g<br>npm i hexocli -g</p></blockquote><p>输入 hexo -v 有版本号返回说明安装成功</p><h3 id="4-建立基站"><a href="#4-建立基站" class="headerlink" title="4.建立基站"></a>4.建立基站</h3><p>找一个存放hexo代码的blog文件夹在该目录下输入 hexo init 初始化该文件夹；</p><h3 id="5-尝试新建一个日志"><a href="#5-尝试新建一个日志" class="headerlink" title="5.尝试新建一个日志"></a>5.尝试新建一个日志</h3><p>在命令行下 hexo new post “1web log”新建一个md文档在我的 电脑的目录下 F:\hexo\source\ _posts 将会看到 “1web log.md” 文件,在该md文档里就可以写自己的博客啦！！！<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/assets/blog/blog180320/write_blog.png" alt="write_blog" title="">                </div>                <div class="image-caption">write_blog</div>            </figure></p><h3 id="6-下载主题"><a href="#6-下载主题" class="headerlink" title="6.下载主题"></a>6.下载主题</h3><p>在<a href="https://github.com/" target="_blank" rel="noopener">github</a>克隆别人的模板可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Themes</a>上面寻找合适的模板，然后克隆下来，并将这个模板文件放到thems文件夹下，将修改_config里面的文件来去配置，然后一些资源文件里面的配置根据自身需要去调整，详细配置详见<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">hexo官方文档</a>。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/assets/blog/blog180320/deploy_steps.png" alt="deploy_step" title="">                </div>                <div class="image-caption">deploy_step</div>            </figure></p><h3 id="7-调试"><a href="#7-调试" class="headerlink" title="7.调试"></a>7.调试</h3><p>开发准备工作都做完了，就可以开启服务去调试啦！！！</p><blockquote><p>hexo g  #生成静态页面至public目录<br>hexo s  #开启预览访问端口</p></blockquote><p><img src="/assets/blog/blog180320/start_change.png" alt="start_change"></p><h3 id="8-推送代码"><a href="#8-推送代码" class="headerlink" title="8.推送代码"></a>8.推送代码</h3><p>站点都配置完了，命令行状态下输入 <strong> npm install hexo-deployer-git –save </strong>  安装插件，(别忘了配置_config里面的deploy)然后编辑好文章 在命令行下输入 <strong> hexo d -g </strong> 将代码上传到<a href="https://github.com/" target="_blank" rel="noopener">github</a>。</p><h2 id="设置关联域名"><a href="#设置关联域名" class="headerlink" title="设置关联域名"></a>设置关联域名</h2><p>如果想逼格高一点，还可以设置IP去<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">万网</a>申请一个IP地址，很便宜几块钱,如下设置一下，实在不懂请点击新手引导，然后在<a href="https://github.com/" target="_blank" rel="noopener">github</a>对应仓库中（就是<strong>*</strong>github.io文件）进入【Settings】标签页,在【Custom domain】功能中,将刚刚申请的域名写进去save就OK啦，最后在hexo仓库下新建一个CNAME文件，并将申请的域名填进去保存。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/assets/blog/blog180320/IP.png" alt="IP" title="">                </div>                <div class="image-caption">IP</div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/assets/blog/blog180320/IP2.png" alt="IP2" title="">                </div>                <div class="image-caption">IP2</div>            </figure></p><h2 id="一些常用命令"><a href="#一些常用命令" class="headerlink" title="一些常用命令"></a>一些常用命令</h2><blockquote><p>hexo clean    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#删除public文件夹等一些生产目录下的文件<br>hexo new “postName”    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#新建文章<br>hexo new page “pageName”     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#新建页面<br>hexo generate     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#生成静态页面至public目录<br>hexo server     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#将.deploy目录部署到GitHub<br>hexo help     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#查看帮助<br>hexo version    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#查看Hexo的版本</p></blockquote><h2 id="一些网站或文章标题等配置参数"><a href="#一些网站或文章标题等配置参数" class="headerlink" title="一些网站或文章标题等配置参数"></a>一些网站或文章标题等配置参数</h2><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">网站标题</td></tr><tr><td style="text-align:center">subtitle</td><td style="text-align:center">网站副标题</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">网站描述</td></tr><tr><td style="text-align:center">author</td><td style="text-align:center">作者名</td></tr><tr><td style="text-align:center">language</td><td style="text-align:center">网站语言</td></tr><tr><td style="text-align:center">timezone</td><td style="text-align:center">网站使用的时区</td></tr><tr><td style="text-align:center">url</td><td style="text-align:center">网站url</td></tr><tr><td style="text-align:center">root</td><td style="text-align:center">网站根目录</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;本站于2018年3月20日创建，故在此mark，站点是本人用来及记录一些开发技巧与自我提升的一个记录依据，写的不好的地方希望
      
    
    </summary>
    
    
      <category term="建站心得" scheme="http://yoursite.com/tags/%E5%BB%BA%E7%AB%99%E5%BF%83%E5%BE%97/"/>
    
      <category term="经验" scheme="http://yoursite.com/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://yoursite.com/2018/03/24/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/03/24/第一篇博客/</id>
    <published>2018-03-24T09:31:38.000Z</published>
    <updated>2018-03-31T14:59:48.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一篇"><a href="#第一篇" class="headerlink" title="第一篇"></a>第一篇</h2><h2 id="标题些什么好呢"><a href="#标题些什么好呢" class="headerlink" title="标题些什么好呢"></a>标题些什么好呢</h2><h2 id="标题些什么好呢1"><a href="#标题些什么好呢1" class="headerlink" title="标题些什么好呢1"></a>标题些什么好呢1</h2><h2 id="标题些什么好呢2"><a href="#标题些什么好呢2" class="headerlink" title="标题些什么好呢2"></a>标题些什么好呢2</h2><h2 id="标题些什么好呢13"><a href="#标题些什么好呢13" class="headerlink" title="标题些什么好呢13"></a>标题些什么好呢13</h2><h2 id="标题些什么好呢4"><a href="#标题些什么好呢4" class="headerlink" title="标题些什么好呢4"></a>标题些什么好呢4</h2><p><img src="/assets/weixin.jpg" alt="logo"><br>应该说些什么复制一段话把，<br><br>遇见你，是我一世的春暖花开<br><br>岁月向前，生命不止<br><br>心随烟火，雨落成花<br><br>既往不恋，当下不杂，未来不惧<br><br>岁月向前，生命不止<br><br>心随烟火，雨落成花<br><br>既往不恋，当下不杂，未来不惧<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一篇&quot;&gt;&lt;a href=&quot;#第一篇&quot; class=&quot;headerlink&quot; title=&quot;第一篇&quot;&gt;&lt;/a&gt;第一篇&lt;/h2&gt;&lt;h2 id=&quot;标题些什么好呢&quot;&gt;&lt;a href=&quot;#标题些什么好呢&quot; class=&quot;headerlink&quot; title=&quot;标题些什么好呢
      
    
    </summary>
    
    
      <category term="Foo" scheme="http://yoursite.com/tags/Foo/"/>
    
      <category term="Bar" scheme="http://yoursite.com/tags/Bar/"/>
    
      <category term="Baz" scheme="http://yoursite.com/tags/Baz/"/>
    
  </entry>
  
</feed>
